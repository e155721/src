for (i in 1:nrow) {
tmpList <- as.vector(sheet[i,])
word_list[[i]] <- tmpList[!is.na(tmpList)]
}
return(word_list)
}
word_list <-  makeWordList("sheet-6.txt")
word_list[[*]]
word_list[[]]
# make word list
makeWordList <- function(file)
{
# load words data
sheet <- read.table(file, sep = " ")
sheet <- as.matrix(sheet)
nrow <- dim(sheet)[1]
word_list <- matrix()
for (i in 1:nrow) {
tmpList <- as.matrix(sheet[i,])
word_list[[i]] <- tmpList[!is.na(tmpList)]
}
return(word_list)
}
word_list <-  makeWordList("sheet-6.txt")
# make word list
makeWordList <- function(file)
{
# load words data
sheet <- read.table(file, sep = " ")
sheet <- as.matrix(sheet)
nrow <- dim(sheet)[1]
word_list <- matrix()
for (i in 1:nrow) {
tmpList <- as.matrix(sheet[i,])
word_list[i,] <- tmpList[!is.na(tmpList)]
}
return(word_list)
}
word_list <-  makeWordList("sheet-6.txt")
a<-2
b<-3
c<-4
d<-5
a*c +
a*d +
b*c +
b*d
45/4
a+b+c+d
a <- c(-7, -5, -3)
b <- c(-3,2,-2)
c <- c(3,2,1)
A <- matrix()
A[1,] <- a
A <- matrix(0, ncol = 3, nrow = 3)
A[1,] <- a
A[2,] <- b
A[3,] <- c
A
det(A)
# make word list
makeWordList <- function(file)
{
# load words data
sheet <- read.table(file, sep = " ")
sheet <- as.matrix(sheet)
nrow <- dim(sheet)[1]
ncol <- dim(sheet)[2]
word_list <- matrix(nrow = nrow, ncol = ncol)
for (i in 1:nrow) {
tmpList <- as.vector(sheet[i,])
word_list[i,] <- tmpList[!is.na(tmpList)]
}
return(word_list)
}
word_list <-  makeWordList("sheet-6.txt")
# make word list
makeWordList <- function(file)
{
# load words data
sheet <- read.table(file, sep = " ")
sheet <- as.matrix(sheet)
nrow <- dim(sheet)[1]
ncol <- dim(sheet)[2]
word_list <- matrix(NA, nrow = nrow, ncol = ncol)
for (i in 1:nrow) {
tmpList <- as.vector(sheet[i,])
word_list[i,] <- tmpList[!is.na(tmpList)]
}
return(word_list)
}
word_list <-  makeWordList("sheet-6.txt")
# make word list
makeWordList <- function(file)
{
# load words data
sheet <- read.table(file, sep = " ")
sheet <- as.matrix(sheet)
nrow <- dim(sheet)[1]
ncol <- dim(sheet)[2]
word_list <- matrix(NA, nrow = nrow, ncol = ncol)
for (i in 1:nrow) {
word_list[i,] <- tmpList <- as.vector(sheet[i,])
}
return(word_list)
}
word_list <-  makeWordList("sheet-6.txt")
View(word_list)
# make word list
makeWordList <- function(file)
{
# load words data
sheet <- read.table(file, sep = " ")
sheet <- as.matrix(sheet)
nrow <- dim(sheet)[1]
word_list <- list()
for (i in 1:nrow) {
tmpList <- as.vector(sheet[i,])
word_list[[i]] <- tmpList[!is.na(tmpList)]
}
return(word_list)
}
word_list <-  makeWordList("sheet-6.txt")
View(word_list)
a<-c(0,0,0,3)
b<-c(2,3,1,2)
c<-c(1,1,0,-1)
d<-c(1,-1,-1,1)
B <- matrix(0,ncol=4,nrow=4)
for ( i in 1:4) {}
for ( i in 1:4) {
}
B[1,] <-a
B[2,] <-b
B[3,] <-c
list <- list()
list <- d
list
list[[1]]
list[1] <- list()
list[[1]] <-d
B[1,] <- d
B
det(B)
d
b[1,] <- a
a
B[1,] <- a
B[4,] <- d
b
B
det(B)
B*2
a <- matrix(2,ncol=2,nrow=3)
a
b <- matrix(3,ncol=2,nrow=3)
b
a*b
a <- c(1,2,1)
b <- c(2,1,-1)
c <- c(3,5,1)
A <- matrix(0, nrow=3,ncol=3)
A[1,] <- b
A[1,] <- a
A[2,] <- b
A[3,] <- c
A[4,] <- d
A
a <- c(-2,3,-1)
b <- c(2,-1,0)
c <- c(-1,-1,1)
B <- matrix(0,nrow=3)
B
B <- matrix(0,nrow=3, ncol=3)
B[,1] <- a
B[1,] <- a
B[2,] <- b
B[3,] <- c
B
A*B
solve(A)
a <- c(1,2,1)
b <- c(2,1,-1)
c <- c(3,5,1)
A <- matrix(0, nrow=3,ncol=3)
list <- list
list <- list()
list[[1]] <- a
list[[1]] <- as.vector(a)
list[[1]]
list[[2]] <- as.vector(b)
list[[3]] <- as.vector(c)
list
A[1,]<-list[[1]]
A[2,]<-list[[2]]
A[3,]<-list[[3]]
A
d<-c(11/2,3/2,-5/2)
e<-c(7/2,1/2,-3/2)
f<-c(-4,-1,2)
l <- list8
l <- list()
l[[1]]<-d
l[[2]]<-3
l[[2]]<-e
l[[3]]<-f
l
l[[1]]
B
B
A
B[1,]<-l[[1]]
B[2,]<-l[[2]]
B[3,]<-l[[3]]
B
A
A*B
d
e
d
e
f
l[[2]]<-f
l[[3]]<-e
l
B[1,]<-l[[1]]
B[2,]<-l[[2]]
B[3,]<-l[[3]]
B
A*B
A
B
A*B
crossprod(A,B)
you <- readline("Who are you?")
a <- matrix(1,13,3,3,3,3, nrow=3,ncol=3)
a <- matrix(1,13,3,3,3,3 nrow=3,ncol=3)
a <- matrix(c(1,13,3,3,3,3) nrow=3,ncol=3)
a <- matrix(c(1,13,3,3,3,3), nrow=3,ncol=3)
a
a <- "a"
as.numeric(a)
a <- c("1",1,1,3)
a
length(a)
makeMatrix <- function(x) {
nlen <- length(x)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix(c(1,3,-2,2,7,-2,-1,-2,5))
3/2
3%%2
trunc(3/2)
makeMatrix <- function(x) {
nlen <- trunc(length(x))
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix(c(1,3,-2,2,7,-2,-1,-2,5))
makeMatrix <- function(x) {
nlen <- trunc(length(x))
print(nlen)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix(c(1,3,-2,2,7,-2,-1,-2,5))
trunc(9/2)
makeMatrix <- function(x) {
nlen <- trunc(length(x)/2)
print(nlen)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
trunc(9/2)
makeMatrix <- function(x) {
nlen <- trunc(length(x)/2)
print(nlen)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
print(nlen)
makeMatrix <- function(x) {
nlen <- trunc(length(x)/2)
print(nlen)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix(c(1,3,-2,2,7,-2,-1,-2,5))
sqrt(2)
trunc(sqrt(2))
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
print(nlen)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix(c(1,3,-2,2,7,-2,-1,-2,5))
1.32322/1
4/1
a<-3.232323
a
h <- trunc(a)
h
trunc(a) - a
a - trunc(a)
if(a - trunc(a)<1)
{}
if(a - trunc(a)<1){
print("aa")}
if(a - trunc(a)<1)
print("a")
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
if(nlen - trunc(nlen)<1)
print(nlen)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix(c(1,2,3))
exit
exit()
help(exit)
on.exit
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
if(nlen - trunc(nlen)<1)
on.exit
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix(c(1,2,3))
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
if(nlen - trunc(nlen)<1)
return("fdsa")
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix(c(1,2,3))
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
if(nlen - trunc(nlen)<1)
return(0)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix(c(1,2,3))
library(formatR)
})
library(formatR)
library(formatR)
biocLite("formatR")
library(formatR)
biocLite(formatR)
tidy_source()
tidy_source()
tidy_source(# data
library(openxlsx)
# output sheets
for (i in 6:6) {
#for (i in 6:135) {
sheetNum <- i
sheet <- read.xlsx("test.xlsm", sheet = sheetNum)[,12:27]
write.table(sheet, paste("sheet-", sheetNum, sep = ""))
}
# make word list
makeWordList <- function(file)
{
# load words data
sheet <- read.table(file, sep = " ")
sheet <- as.matrix(sheet)
nrow <- dim(sheet)[1]
word_list = list()
for (i in 1:nrow) {
tmpList <- as.vector(sheet[i,])
word_list[[i]] <- tmpList[!is.na(tmpList)]
}
return(word_list)
}
word_list <-  makeWordList("sheet-6.txt")
)
tidy_source(# data
library(openxlsx)
# output sheets
for (i in 6:6) {
#for (i in 6:135) {
sheetNum <- i
sheet <- read.xlsx("test.xlsm", sheet = sheetNum)[,12:27]
write.table(sheet, paste("sheet-", sheetNum, sep = ""))
}
# make word list
makeWordList <- function(file)
{
# load words data
sheet <- read.table(file, sep = " ")
sheet <- as.matrix(sheet)
nrow <- dim(sheet)[1]
word_list = list()
for (i in 1:nrow) {
tmpList <- as.vector(sheet[i,])
word_list[[i]] <- tmpList[!is.na(tmpList)]
}
return(word_list)
}
word_list <-  makeWordList("sheet-6.txt")
l
tidy_source()
tidy_source()
tidy_source()
makeMatrix(c(3,6,7,4,2,-2,2,1,3))
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
if(nlen - trunc(nlen)<1)
return(0)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
if(nlen - trunc(nlen)<1)
return(0)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
if(nlen - trunc(nlen)<1)
return(0)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
a <- makeMatrix(c(3,6,7,4,2,-2,2,1,3))
a
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
print(nlen
)
if(nlen - trunc(nlen)<1)
return(0)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
print(nlen)
if(nlen - trunc(nlen)<1)
return(0)
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
a <- makeMatrix(c(3,6,7,4,2,-2,2,1,3))
a
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
a
a <- makeMatrix(c(3,6,7,4,2,-2,2,1,3))
a
makeMatrix <- function(x) {
nlen <- sqrt(length(x))
mat <- matrix(x, nrow = nlen, ncol = nlen)
return(mat)
}
a
det(a)
det(makeMatrix(c(1,-2,3,2,-2,2,0,2,1,4,2,2,5,9,-8,-8)))
View(det)
View(determinant)
library(Biostrings)
data(PAM)
data(PAM30)
a <- data(PAM30)
a
pam30
PAM30
PAM45
pam30
upper.tri(PAM30)
PAM30[lower.tri(PAM30)}
PAM30[lower.tri(PAM30)]
View(PAM30[lower.tri(PAM30)])
a <- matrix(PAM30[lower.tri(PAM30)])
a
View(a)
size(PAM30)
dim(PAM30)
a <- matrix(PAM30[lower.tri(PAM30)], 25, 25)
a
a[lower.tri(a)] <- matrix(PAM30[lower.tri(PAM30)], 25, 25)
a <- matrix()
a[lower.tri(a)] <- matrix(PAM30[lower.tri(PAM30)], 25, 25)
a
a <- matrix(0,25,25)
a
a[lower.tri(a)] <- matrix(PAM30[lower.tri(PAM30)], 25, 25)
a[lower.tri(a)] <- PAM30[lower.tri(PAM30)]
a
a <- PAM30[lower.tri(PAM30)]
a
a[lower.tri(a)] <- PAM30[lower.tri(PAM30)]
a <- matrix(0,25,25)
a[lower.tri(a)] <- PAM30[lower.tri(PAM30)]
a
xtable
xtable(a)
library(xtable)
xtable(a)
biocLite()
biocLite()
