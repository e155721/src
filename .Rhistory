vowel <- read.table("vowel.txt")
vowel <- vowel$V1
list_length <- length(word_list)
array_length <- length(word_list[[1]])
l <- list()
for (i in list_length) {
l[[i]] <- array(array_length)
}
for (i in 1:list_length) {
j = 1
while (j<array_length+1) {
sym <- word_list[[i]][j]
if (sym != "-1") {
sym <- is.element(word_list[[i]][j], vowel)
} else {
sym <- "-1"
}
if (sym == TRUE) {
l[[i]][j] <- "V"
}
else if (sym == "-1") {
l[[i]][j] <- "-1"
}
else {
l[[i]][j] <- "C"
}
j <- j+1
}
}
rlt <- matrix(NA, nrow = list_length, ncol = array_length)
for (i in 1:list_length) {
rlt[i,] <- l[[i]]
}
output_file <- paste("output/", strsplit(data_file, "/")[[1]][2], sep = "")
write.table(rlt, output_file)
}
for (f in dir) {
Translate_SymbolArrays_into_VC(f)
}
ls
a
strsplit(a, "/")
tail(strsplit(a, "/"))
tail(strsplit(a, "/")[[1]])
s <- strsplit(a, "/")[[1]]
s
s[1]
tail[s]
tail(s)
tail(s[1])
class(s)
strsplit(a, "/")[[1]]
strsplit(a, "/")[[1]][length(strsplit(a,"/")[[1]])]
Translate_SymbolArrays_into_VC <- function(data_file)
{
# make word list
makeWordList <- function(file)
{
# load words data
sheet <- read.table(file, sep = " ")
sheet <- as.matrix(sheet)
nrow <- dim(sheet)[1]
word_list <- list()
for (i in 1:nrow) {
tmpList <- as.vector(sheet[i,])
word_list[[i]] <- tmpList[!is.na(tmpList)]
}
return(word_list)
}
word_list <-  makeWordList(data_file)
vowel <- read.table("vowel.txt")
vowel <- vowel$V1
list_length <- length(word_list)
array_length <- length(word_list[[1]])
l <- list()
for (i in list_length) {
l[[i]] <- array(array_length)
}
for (i in 1:list_length) {
j = 1
while (j<array_length+1) {
sym <- word_list[[i]][j]
if (sym != "-1") {
sym <- is.element(word_list[[i]][j], vowel)
} else {
sym <- "-1"
}
if (sym == TRUE) {
l[[i]][j] <- "V"
}
else if (sym == "-1") {
l[[i]][j] <- "-1"
}
else {
l[[i]][j] <- "C"
}
j <- j+1
}
}
rlt <- matrix(NA, nrow = list_length, ncol = array_length)
for (i in 1:list_length) {
rlt[i,] <- l[[i]]
}
path_length <- length(strsplit(data_file, "/")[[1]])
output_file <- paste("output/", strsplit(data_file, "/")[[1]][path_length], sep = "")
write.table(rlt, output_file)
}
for (f in dir) {
Translate_SymbolArrays_into_VC(f)
}
list.files
list.files(.)
list.files(".")
input_files_path <- "/Users/e155721/OkazakiLab/src/tmp"
input_files_path
file_list <- list.files(input_files_path)
file_list
file_list <- paste(input_files_path, list.files(input_files_path), sep = "/")
file_list
file_list <- paste(output_path, list.files(input_path), sep = "/")
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
file_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
Translate_SymbolArrays_into_VC(f, output_path)
}
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
Translate_SymbolArrays_into_VC(f, output_path)
}
# load makeWordList
source("/Users/e155721/OkazakiLab/src/data_processing/makeWordList.R")
translateSymbolArraysIntoVC <- function(data_file, output_path)
{
word_list <-  makeWordList(data_file)
vowel <- read.table("vowel.txt")
vowel <- vowel$V1
list_length <- length(word_list)
array_length <- length(word_list[[1]])
l <- list()
for (i in list_length) {
l[[i]] <- array(array_length)
}
for (i in 1:list_length) {
j = 1
while (j<array_length+1) {
sym <- word_list[[i]][j]
if (sym != "-1") {
sym <- is.element(word_list[[i]][j], vowel)
} else {
sym <- "-1"
}
if (sym == TRUE) {
l[[i]][j] <- "V"
}
else if (sym == "-1") {
l[[i]][j] <- "-1"
}
else {
l[[i]][j] <- "C"
}
j <- j+1
}
}
rlt <- matrix(NA, nrow = list_length, ncol = array_length)
for (i in 1:list_length) {
rlt[i,] <- l[[i]]
}
path_length <- length(strsplit(data_file, "/")[[1]])
output_file <- paste(output_path, strsplit(data_file, "/")[[1]][path_length], sep = "")
write.table(rlt, output_file)
}
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
# load makeWordList
source("/Users/e155721/OkazakiLab/src/data_processing/makeWordList.R")
translateSymbolArraysIntoVC <- function(data_file, output_path)
{
word_list <-  makeWordList(data_file)
vowel <- read.table("vowel.txt")
vowel <- vowel$V1
list_length <- length(word_list)
array_length <- length(word_list[[1]])
l <- list()
for (i in list_length) {
l[[i]] <- array(array_length)
}
for (i in 1:list_length) {
j = 1
while (j<array_length+1) {
sym <- word_list[[i]][j]
if (sym != "-1") {
sym <- is.element(word_list[[i]][j], vowel)
} else {
sym <- "-1"
}
if (sym == TRUE) {
l[[i]][j] <- "V"
}
else if (sym == "-1") {
l[[i]][j] <- "-1"
}
else {
l[[i]][j] <- "C"
}
j <- j+1
}
}
rlt <- matrix(NA, nrow = list_length, ncol = array_length)
for (i in 1:list_length) {
rlt[i,] <- l[[i]]
}
path_length <- length(strsplit(data_file, "/")[[1]])
output_file <- paste(output_path, strsplit(data_file, "/")[[1]][path_length], sep = "/")
write.table(rlt, output_file)
}
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
vowel <- vowel$V1
vowel <- read.table("vowel.txt")
vowel <- vowel$V1
vowel <- read.table("vowel.txt")
# load makeWordList
source("/Users/e155721/OkazakiLab/src/data_processing/makeWordList.R")
translateSymbolArraysIntoVC <- function(data_file, output_path)
{
word_list <-  makeWordList(data_file)
vowel <- read.table("vowel.txt")
vowel <- vowel$V1
list_length <- length(word_list)
array_length <- length(word_list[[1]])
l <- list()
for (i in list_length) {
l[[i]] <- array(array_length)
}
for (i in 1:list_length) {
j = 1
while (j<array_length+1) {
sym <- word_list[[i]][j]
if (sym != "-1") {
sym <- is.element(word_list[[i]][j], vowel)
} else {
sym <- "-1"
}
if (sym == TRUE) {
l[[i]][j] <- "V"
}
else if (sym == "-1") {
l[[i]][j] <- "-1"
}
else {
l[[i]][j] <- "C"
}
j <- j+1
}
}
rlt <- matrix(NA, nrow = list_length, ncol = array_length)
for (i in 1:list_length) {
rlt[i,] <- l[[i]]
}
path_length <- length(strsplit(data_file, "/")[[1]])
output_file <- paste(output_path, strsplit(data_file, "/")[[1]][path_length], sep = "/")
write.table(rlt, output_file)
}
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
# load makeWordList
source("/Users/e155721/OkazakiLab/src/data_processing/makeWordList.R")
translateSymbolArraysIntoVC <- function(data_file, output_path)
{
word_list <-  makeWordList(data_file)
vowel <- read.table("vowel.txt")
vowel <- vowel$V1
list_length <- length(word_list)
array_length <- length(word_list[[1]])
l <- list()
for (i in list_length) {
l[[i]] <- array(array_length)
}
for (i in 1:list_length) {
j = 1
while (j<array_length+1) {
sym <- word_list[[i]][j]
if (sym != "-1") {
sym <- is.element(word_list[[i]][j], vowel)
} else {
sym <- "-1"
}
if (sym == TRUE) {
l[[i]][j] <- "V"
}
else if (sym == "-1") {
l[[i]][j] <- "-1"
}
else {
l[[i]][j] <- "C"
}
j <- j+1
}
}
rlt <- matrix(NA, nrow = list_length, ncol = array_length)
for (i in 1:list_length) {
rlt[i,] <- l[[i]]
}
path_length <- length(strsplit(data_file, "/")[[1]])
output_file <- paste(output_path, strsplit(data_file, "/")[[1]][path_length], sep = "/")
write.table(rlt, output_file)
}
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
vowel <- read.table("vowel.txt")
# load makeWordList
source("/Users/e155721/OkazakiLab/src/data_processing/makeWordList.R")
translateSymbolArraysIntoVC <- function(data_file, output_path)
{
word_list <-  makeWordList(data_file)
vowel <- read.table("/Users/e155721/OkazakiLab/src/symbols/vowel.txt")
vowel <- vowel$V1
list_length <- length(word_list)
array_length <- length(word_list[[1]])
l <- list()
for (i in list_length) {
l[[i]] <- array(array_length)
}
for (i in 1:list_length) {
j = 1
while (j<array_length+1) {
sym <- word_list[[i]][j]
if (sym != "-1") {
sym <- is.element(word_list[[i]][j], vowel)
} else {
sym <- "-1"
}
if (sym == TRUE) {
l[[i]][j] <- "V"
}
else if (sym == "-1") {
l[[i]][j] <- "-1"
}
else {
l[[i]][j] <- "C"
}
j <- j+1
}
}
rlt <- matrix(NA, nrow = list_length, ncol = array_length)
for (i in 1:list_length) {
rlt[i,] <- l[[i]]
}
path_length <- length(strsplit(data_file, "/")[[1]])
output_file <- paste(output_path, strsplit(data_file, "/")[[1]][path_length], sep = "/")
write.table(rlt, output_file)
}
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
ls
list.file
list.files
list.files()
list.files("tmp")
list.files("tmp", ful.names=T)
list.files("tmp", full.names=T)
a <- c("a", "b", NA, NA)
a
a[!is.na(a)]
x <- 1
if (x == 1) {
print("1")
} else if (x == 2) {
print("2")
}
x <- 2
if (x == 1) {
print("1")
} else if (x == 2) {
print("2")
}
x <- 2
if (x == 1) {
print("1")
} else
x <- 2
if (x == 1) {
print("1")
} else
if (x == 2) {
print("2")
}
x <- 2
if (x == 1) {
print("1")
} else if
(x == 2) {
print("2")
}
for (i in 1:100)
print(i)
for (i in 1::100) printf(i)
for (i in 1:100) printf(i)
for (i in 1:100) print(i)
for (i in 1::100) print(i)
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
# load makeWordList
source("/Users/e155721/OkazakiLab/src/data_processing/makeWordList.R")
translateSymbolArraysIntoVC <- function(data_file, output_path)
{
word_list <-  makeWordList(data_file)
vowel <- read.table("/Users/e155721/OkazakiLab/src/symbols/vowel.txt")
vowel <- vowel$V1
# get the number of word_list
list_length <- length(word_list)
array_length <- length(word_list[[1]])
# make a list that it has length of array_length
l <- list()
for (i in list_length)
l[[i]] <- array(array_length)
for (i in 1:list_length) {
j = 1
while (j<array_length+1) {
sym <- word_list[[i]][j]
if (sym != "-1") {
sym <- is.element(word_list[[i]][j], vowel)
} else {
sym <- "-1"
}
if (sym == TRUE) {
l[[i]][j] <- "V"
} else if (sym == "-1") {
l[[i]][j] <- "-1"
} else {
l[[i]][j] <- "C"
}
j <- j+1
}
}
rlt <- matrix(NA, nrow = list_length, ncol = array_length)
for (i in 1:list_length)
rlt[i,] <- l[[i]]
path_length <- length(strsplit(data_file, "/")[[1]])
output_file <- paste(output_path, strsplit(data_file, "/")[[1]][path_length], sep = "/")
write.table(rlt, output_file)
}
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
# make word list
makeWordList <- function(file)
{
# load words data
sheet <- read.table(file, sep = " ")
sheet <- as.matrix(sheet)
# get rows number of data sheet
nrow <- dim(sheet)[1]
word_list <- list()
for (i in 1:nrow) {
tmp_list <- as.vector(sheet[i,])
word_list[[i]] <- tmp_list[!is.na(tmp_list)]
}
return(word_list)
}
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
input_path <- "/Users/e155721/OkazakiLab/src/tmp"
output_path <- "/Users/e155721/OkazakiLab/src/output"
files_list <- paste(input_path, list.files(input_path), sep = "/")
for (f in files_list) {
translateSymbolArraysIntoVC(f, output_path)
}
